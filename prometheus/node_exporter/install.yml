---
- name: Install and configure Node Exporter
  hosts: all
  become: true
  gather_facts: true

  vars:
      node_exporter_version: "1.9.1" # Hardcoded version
      node_exporter_base_url: "https://github.com/prometheus/node_exporter/releases/download"

  tasks:
      - name: Map architecture to Node Exporter arch
        ansible.builtin.set_fact:
            node_exporter_arch: >-
                {{ 'amd64' if ansible_architecture == 'x86_64' else
                  'arm64' if ansible_architecture == 'aarch64' else
                  'armv7' if ansible_architecture == 'armv7l' else
                  'armv6' if ansible_architecture == 'armv6l' else
                  ansible_architecture }}

      - name: Set download URL for Node Exporter
        ansible.builtin.set_fact:
            node_exporter_url: >-
                {{ node_exporter_base_url }}/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz

      - name: Print Node Exporter URL
        ansible.builtin.debug:
            msg: "Download URL for Node Exporter: {{ node_exporter_url }}"

      - name: Download Node Exporter tarball
        ansible.builtin.get_url:
            url: "{{ node_exporter_url }}"
            dest: /tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz
            mode: "0644"

      - name: Extract Node Exporter binary
        ansible.builtin.unarchive:
            src: /tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz
            dest: /tmp/
            remote_src: true

      - name: Find extracted Node Exporter binary
        ansible.builtin.find:
            paths: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}"
            patterns: "node_exporter"
            recurse: true
            file_type: file
        register: node_exporter_binary

      - name: Print Node Exporter binary found
        ansible.builtin.debug:
            msg: "Found Node Exporter binary at: {{ node_exporter_binary.files[0].path }}"

      - name: Move Node Exporter binary to /usr/local/bin
        ansible.builtin.command:
            cmd: mv "{{ node_exporter_binary.files[0].path }}" /usr/local/bin/node_exporter
        args:
            removes: "{{ node_exporter_binary.files[0].path }}"
        changed_when: true

      - name: Ensure Node Exporter binary is executable
        ansible.builtin.file:
            path: /usr/local/bin/node_exporter
            mode: "0755"
            owner: root
            group: root

      - name: Create Node Exporter systemd service file
        ansible.builtin.copy:
            dest: /etc/systemd/system/node_exporter.service
            mode: "0644"
            content: |
                [Unit]
                Description=Prometheus Node Exporter
                After=network.target

                [Service]
                User=nobody
                ExecStart=/usr/local/bin/node_exporter

                [Install]
                WantedBy=multi-user.target

      - name: Reload systemd daemon
        ansible.builtin.systemd_service:
            daemon_reload: true

      - name: Enable and start Node Exporter service
        ansible.builtin.systemd_service:
            name: node_exporter
            enabled: true
            state: started

      - name: Print Node Exporter service start progress
        ansible.builtin.debug:
            msg: "Enabled and started Node Exporter service"

      - name: Cleanup temporary files and extracted directory
        ansible.builtin.file:
            path: "{{ item }}"
            state: absent
        loop:
            - /tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz
            - "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}"
